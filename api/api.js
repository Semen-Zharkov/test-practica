export default async function handler(req, res) {
  // –ü—Ä–æ—Å—Ç—ã–µ CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ POST
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method Not Allowed' });
  }

  try {
    console.log('üì® Received webhook data:', req.body);

    // –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const response = {
      success: true,
      message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã',
      timestamp: new Date().toISOString(),
      received_data: req.body,
      roistat_visit: req.body?.roistat_visit || 'not_provided'
    };

    console.log('‚úÖ Response:', response);
    
    res.status(200).json(response);

  } catch (error) {
    console.error('‚ùå API Error:', error);
    res.status(500).json({
      success: false,
      error: 'Internal Server Error',
      details: error.message
    });
  }
}